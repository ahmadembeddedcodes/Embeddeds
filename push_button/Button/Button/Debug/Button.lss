
Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  000002aa  0000033e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800078  00800078  00000356  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000356  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000388  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c25  00000000  00000000  00000474  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006ef  00000000  00000000  00001099  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000422  00000000  00000000  00001788  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00001bac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000466  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000075a  00000000  00000000  0000216e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000028c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	78 00       	.word	0x0078	; ????
  56:	7a 00       	.word	0x007a	; ????
  58:	7c 00       	.word	0x007c	; ????
  5a:	7e 00       	.word	0x007e	; ????
  5c:	7f 00       	.word	0x007f	; ????
  5e:	7f 00       	.word	0x007f	; ????
  60:	7f 00       	.word	0x007f	; ????
  62:	7f 00       	.word	0x007f	; ????
  64:	7f 00       	.word	0x007f	; ????
  66:	7f 00       	.word	0x007f	; ????
  68:	7f 00       	.word	0x007f	; ????
  6a:	7f 00       	.word	0x007f	; ????
  6c:	7f 00       	.word	0x007f	; ????
  6e:	7f 00       	.word	0x007f	; ????
  70:	7f 00       	.word	0x007f	; ????
  72:	7f 00       	.word	0x007f	; ????
  74:	7f 00       	.word	0x007f	; ????
  76:	7f 00       	.word	0x007f	; ????
  78:	7f 00       	.word	0x007f	; ????
  7a:	7f 00       	.word	0x007f	; ????
  7c:	7f 00       	.word	0x007f	; ????
  7e:	7f 00       	.word	0x007f	; ????
  80:	7f 00       	.word	0x007f	; ????
  82:	7f 00       	.word	0x007f	; ????
  84:	7f 00       	.word	0x007f	; ????
  86:	7f 00       	.word	0x007f	; ????
  88:	7f 00       	.word	0x007f	; ????
  8a:	7f 00       	.word	0x007f	; ????
  8c:	7f 00       	.word	0x007f	; ????
  8e:	7f 00       	.word	0x007f	; ????
  90:	7f 00       	.word	0x007f	; ????
  92:	7f 00       	.word	0x007f	; ????
  94:	78 00       	.word	0x0078	; ????
  96:	7a 00       	.word	0x007a	; ????
  98:	7c 00       	.word	0x007c	; ????
  9a:	7e 00       	.word	0x007e	; ????

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf e5       	ldi	r28, 0x5F	; 95
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	10 e0       	ldi	r17, 0x00	; 0
  aa:	a0 e6       	ldi	r26, 0x60	; 96
  ac:	b0 e0       	ldi	r27, 0x00	; 0
  ae:	ea ea       	ldi	r30, 0xAA	; 170
  b0:	f2 e0       	ldi	r31, 0x02	; 2
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x10>
  b4:	05 90       	lpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 37       	cpi	r26, 0x78	; 120
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0xc>

000000be <__do_clear_bss>:
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	a8 e7       	ldi	r26, 0x78	; 120
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ac 37       	cpi	r26, 0x7C	; 124
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	0e 94 06 01 	call	0x20c	; 0x20c <main>
  d2:	0c 94 53 01 	jmp	0x2a6	; 0x2a6 <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <GET_PORT_INDX>:
		*pt_value = *GPIO_DIR[GET_PORT_INDX(port_name)];
		API_Status = NO_ERROR;
	}
	return API_Status ;

}
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	fc 01       	movw	r30, r24
  de:	e1 54       	subi	r30, 0x41	; 65
  e0:	f1 09       	sbc	r31, r1
  e2:	e4 32       	cpi	r30, 0x24	; 36
  e4:	f1 05       	cpc	r31, r1
  e6:	58 f4       	brcc	.+22     	; 0xfe <GET_PORT_INDX+0x24>
  e8:	e6 5d       	subi	r30, 0xD6	; 214
  ea:	ff 4f       	sbci	r31, 0xFF	; 255
  ec:	0c 94 4d 01 	jmp	0x29a	; 0x29a <__tablejump2__>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	05 c0       	rjmp	.+10     	; 0xfe <GET_PORT_INDX+0x24>
  f4:	21 e0       	ldi	r18, 0x01	; 1
  f6:	03 c0       	rjmp	.+6      	; 0xfe <GET_PORT_INDX+0x24>
  f8:	22 e0       	ldi	r18, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <GET_PORT_INDX+0x24>
  fc:	23 e0       	ldi	r18, 0x03	; 3
  fe:	82 2f       	mov	r24, r18
 100:	08 95       	ret

00000102 <GPIO_U8_PIN_WRITE>:
 102:	cf 93       	push	r28
 104:	68 30       	cpi	r22, 0x08	; 8
 106:	a0 f5       	brcc	.+104    	; 0x170 <GPIO_U8_PIN_WRITE+0x6e>
 108:	c6 2f       	mov	r28, r22
 10a:	44 23       	and	r20, r20
 10c:	c9 f0       	breq	.+50     	; 0x140 <GPIO_U8_PIN_WRITE+0x3e>
 10e:	41 30       	cpi	r20, 0x01	; 1
 110:	89 f5       	brne	.+98     	; 0x174 <GPIO_U8_PIN_WRITE+0x72>
 112:	0e 94 6d 00 	call	0xda	; 0xda <GET_PORT_INDX>
 116:	e8 2f       	mov	r30, r24
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	ee 0f       	add	r30, r30
 11c:	ff 1f       	adc	r31, r31
 11e:	e0 59       	subi	r30, 0x90	; 144
 120:	ff 4f       	sbci	r31, 0xFF	; 255
 122:	01 90       	ld	r0, Z+
 124:	f0 81       	ld	r31, Z
 126:	e0 2d       	mov	r30, r0
 128:	20 81       	ld	r18, Z
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 c0       	rjmp	.+4      	; 0x134 <GPIO_U8_PIN_WRITE+0x32>
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	ca 95       	dec	r28
 136:	e2 f7       	brpl	.-8      	; 0x130 <GPIO_U8_PIN_WRITE+0x2e>
 138:	82 2b       	or	r24, r18
 13a:	80 83       	st	Z, r24
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	1b c0       	rjmp	.+54     	; 0x176 <GPIO_U8_PIN_WRITE+0x74>
 140:	0e 94 6d 00 	call	0xda	; 0xda <GET_PORT_INDX>
 144:	e8 2f       	mov	r30, r24
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	ee 0f       	add	r30, r30
 14a:	ff 1f       	adc	r31, r31
 14c:	e0 59       	subi	r30, 0x90	; 144
 14e:	ff 4f       	sbci	r31, 0xFF	; 255
 150:	01 90       	ld	r0, Z+
 152:	f0 81       	ld	r31, Z
 154:	e0 2d       	mov	r30, r0
 156:	20 81       	ld	r18, Z
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	02 c0       	rjmp	.+4      	; 0x162 <GPIO_U8_PIN_WRITE+0x60>
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	ca 95       	dec	r28
 164:	e2 f7       	brpl	.-8      	; 0x15e <GPIO_U8_PIN_WRITE+0x5c>
 166:	80 95       	com	r24
 168:	82 23       	and	r24, r18
 16a:	80 83       	st	Z, r24
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	03 c0       	rjmp	.+6      	; 0x176 <GPIO_U8_PIN_WRITE+0x74>
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	01 c0       	rjmp	.+2      	; 0x176 <GPIO_U8_PIN_WRITE+0x74>
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <GPIO_U8_PIN_DIR>:
 17a:	cf 93       	push	r28
 17c:	68 30       	cpi	r22, 0x08	; 8
 17e:	a0 f5       	brcc	.+104    	; 0x1e8 <GPIO_U8_PIN_DIR+0x6e>
 180:	c6 2f       	mov	r28, r22
 182:	44 23       	and	r20, r20
 184:	c9 f0       	breq	.+50     	; 0x1b8 <GPIO_U8_PIN_DIR+0x3e>
 186:	41 30       	cpi	r20, 0x01	; 1
 188:	89 f5       	brne	.+98     	; 0x1ec <GPIO_U8_PIN_DIR+0x72>
 18a:	0e 94 6d 00 	call	0xda	; 0xda <GET_PORT_INDX>
 18e:	e8 2f       	mov	r30, r24
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	ee 0f       	add	r30, r30
 194:	ff 1f       	adc	r31, r31
 196:	e8 59       	subi	r30, 0x98	; 152
 198:	ff 4f       	sbci	r31, 0xFF	; 255
 19a:	01 90       	ld	r0, Z+
 19c:	f0 81       	ld	r31, Z
 19e:	e0 2d       	mov	r30, r0
 1a0:	20 81       	ld	r18, Z
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <GPIO_U8_PIN_DIR+0x32>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	ca 95       	dec	r28
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <GPIO_U8_PIN_DIR+0x2e>
 1b0:	82 2b       	or	r24, r18
 1b2:	80 83       	st	Z, r24
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	1b c0       	rjmp	.+54     	; 0x1ee <GPIO_U8_PIN_DIR+0x74>
 1b8:	0e 94 6d 00 	call	0xda	; 0xda <GET_PORT_INDX>
 1bc:	e8 2f       	mov	r30, r24
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	ee 0f       	add	r30, r30
 1c2:	ff 1f       	adc	r31, r31
 1c4:	e8 59       	subi	r30, 0x98	; 152
 1c6:	ff 4f       	sbci	r31, 0xFF	; 255
 1c8:	01 90       	ld	r0, Z+
 1ca:	f0 81       	ld	r31, Z
 1cc:	e0 2d       	mov	r30, r0
 1ce:	20 81       	ld	r18, Z
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <GPIO_U8_PIN_DIR+0x60>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	ca 95       	dec	r28
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <GPIO_U8_PIN_DIR+0x5c>
 1de:	80 95       	com	r24
 1e0:	82 23       	and	r24, r18
 1e2:	80 83       	st	Z, r24
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	03 c0       	rjmp	.+6      	; 0x1ee <GPIO_U8_PIN_DIR+0x74>
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	01 c0       	rjmp	.+2      	; 0x1ee <GPIO_U8_PIN_DIR+0x74>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <GPIO_U8_PIN_READ_SIMPLE>:


u8 GPIO_U8_PIN_READ_SIMPLE(u8 port_name,u8 pin_number)
{
	// read the pin state
   return	*GPIO_PIN[GET_PORT_INDX(port_name)] ;  
 1f2:	0e 94 6d 00 	call	0xda	; 0xda <GET_PORT_INDX>
 1f6:	e8 2f       	mov	r30, r24
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	ee 0f       	add	r30, r30
 1fc:	ff 1f       	adc	r31, r31
 1fe:	e0 5a       	subi	r30, 0xA0	; 160
 200:	ff 4f       	sbci	r31, 0xFF	; 255
 202:	01 90       	ld	r0, Z+
 204:	f0 81       	ld	r31, Z
 206:	e0 2d       	mov	r30, r0
 208:	80 81       	ld	r24, Z
	 
	//return the state
}
 20a:	08 95       	ret

0000020c <main>:
#include "pb.h"

int main(void)
{
  
   PB_Init('a',PIN0);   //(OR)==>  GPIO_U8_PIN_DIR('a',0,pin_dir_input); 
 20c:	60 e0       	ldi	r22, 0x00	; 0
 20e:	81 e6       	ldi	r24, 0x61	; 97
 210:	0e 94 49 01 	call	0x292	; 0x292 <PB_Init>
   GPIO_U8_PIN_DIR('a',1,pin_dir_output); 
 214:	41 e0       	ldi	r20, 0x01	; 1
 216:	61 e0       	ldi	r22, 0x01	; 1
 218:	81 e6       	ldi	r24, 0x61	; 97
 21a:	0e 94 bd 00 	call	0x17a	; 0x17a <GPIO_U8_PIN_DIR>
   GPIO_U8_PIN_WRITE('a',1,0); 
 21e:	40 e0       	ldi	r20, 0x00	; 0
 220:	61 e0       	ldi	r22, 0x01	; 1
 222:	81 e6       	ldi	r24, 0x61	; 97
 224:	0e 94 81 00 	call	0x102	; 0x102 <GPIO_U8_PIN_WRITE>
	
	while (1) 
    {
		
		if (   ! GPIO_U8_PIN_READ_SIMPLE('a',0)     /*! PB_IsPressed('a',0)*/)
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	81 e6       	ldi	r24, 0x61	; 97
 22c:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <GPIO_U8_PIN_READ_SIMPLE>
 230:	81 11       	cpse	r24, r1
 232:	fa cf       	rjmp	.-12     	; 0x228 <main+0x1c>
		  {
			  GPIO_U8_PIN_WRITE('a',1,1); 
 234:	41 e0       	ldi	r20, 0x01	; 1
 236:	61 e0       	ldi	r22, 0x01	; 1
 238:	81 e6       	ldi	r24, 0x61	; 97
 23a:	0e 94 81 00 	call	0x102	; 0x102 <GPIO_U8_PIN_WRITE>
 23e:	80 ec       	ldi	r24, 0xC0	; 192
 240:	94 ed       	ldi	r25, 0xD4	; 212
 242:	a1 e0       	ldi	r26, 0x01	; 1
 244:	b0 e0       	ldi	r27, 0x00	; 0
			  delay_ms(300); 
 246:	00 00       	nop
 248:	01 97       	sbiw	r24, 0x01	; 1
 24a:	a1 09       	sbc	r26, r1
 24c:	b1 09       	sbc	r27, r1
 24e:	d9 f7       	brne	.-10     	; 0x246 <main+0x3a>
 250:	0e c0       	rjmp	.+28     	; 0x26e <main+0x62>
			  GPIO_U8_PIN_WRITE('a',1,0);
			  delay_ms(300);
 252:	00 00       	nop
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	a1 09       	sbc	r26, r1
 258:	b1 09       	sbc	r27, r1
 25a:	d9 f7       	brne	.-10     	; 0x252 <main+0x46>
 25c:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__data_end>
 260:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__data_end+0x1>
 264:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end+0x2>
 268:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x3>
 26c:	dd cf       	rjmp	.-70     	; 0x228 <main+0x1c>
 26e:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__data_end>
 272:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__data_end+0x1>
 276:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end+0x2>
 27a:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x3>
		
		if (   ! GPIO_U8_PIN_READ_SIMPLE('a',0)     /*! PB_IsPressed('a',0)*/)
		  {
			  GPIO_U8_PIN_WRITE('a',1,1); 
			  delay_ms(300); 
			  GPIO_U8_PIN_WRITE('a',1,0);
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	81 e6       	ldi	r24, 0x61	; 97
 284:	0e 94 81 00 	call	0x102	; 0x102 <GPIO_U8_PIN_WRITE>
 288:	80 ec       	ldi	r24, 0xC0	; 192
 28a:	94 ed       	ldi	r25, 0xD4	; 212
 28c:	a1 e0       	ldi	r26, 0x01	; 1
 28e:	b0 e0       	ldi	r27, 0x00	; 0
 290:	e0 cf       	rjmp	.-64     	; 0x252 <main+0x46>

00000292 <PB_Init>:
#include "GPIO.h"

void PB_Init(u8 port_name, u8 pin_number)
{
	// set the corresponding pin as an input
	GPIO_U8_PIN_DIR(port_name , pin_number , pin_dir_input);
 292:	40 e0       	ldi	r20, 0x00	; 0
 294:	0e 94 bd 00 	call	0x17a	; 0x17a <GPIO_U8_PIN_DIR>
 298:	08 95       	ret

0000029a <__tablejump2__>:
 29a:	ee 0f       	add	r30, r30
 29c:	ff 1f       	adc	r31, r31
 29e:	05 90       	lpm	r0, Z+
 2a0:	f4 91       	lpm	r31, Z
 2a2:	e0 2d       	mov	r30, r0
 2a4:	09 94       	ijmp

000002a6 <_exit>:
 2a6:	f8 94       	cli

000002a8 <__stop_program>:
 2a8:	ff cf       	rjmp	.-2      	; 0x2a8 <__stop_program>
