
Button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000276  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000276  000002ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000302  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000334  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cc0  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000761  00000000  00000000  000010e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004d0  00000000  00000000  00001841  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000015c  00000000  00000000  00001d14  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000049f  00000000  00000000  00001e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007a2  00000000  00000000  0000230f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00002ab1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   8:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  14:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  24:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  2c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  54:	70 00       	.word	0x0070	; ????
  56:	72 00       	.word	0x0072	; ????
  58:	74 00       	.word	0x0074	; ????
  5a:	76 00       	.word	0x0076	; ????
  5c:	77 00       	.word	0x0077	; ????
  5e:	77 00       	.word	0x0077	; ????
  60:	77 00       	.word	0x0077	; ????
  62:	77 00       	.word	0x0077	; ????
  64:	77 00       	.word	0x0077	; ????
  66:	77 00       	.word	0x0077	; ????
  68:	77 00       	.word	0x0077	; ????
  6a:	77 00       	.word	0x0077	; ????
  6c:	77 00       	.word	0x0077	; ????
  6e:	77 00       	.word	0x0077	; ????
  70:	77 00       	.word	0x0077	; ????
  72:	77 00       	.word	0x0077	; ????
  74:	77 00       	.word	0x0077	; ????
  76:	77 00       	.word	0x0077	; ????
  78:	77 00       	.word	0x0077	; ????
  7a:	77 00       	.word	0x0077	; ????
  7c:	77 00       	.word	0x0077	; ????
  7e:	77 00       	.word	0x0077	; ????
  80:	77 00       	.word	0x0077	; ????
  82:	77 00       	.word	0x0077	; ????
  84:	77 00       	.word	0x0077	; ????
  86:	77 00       	.word	0x0077	; ????
  88:	77 00       	.word	0x0077	; ????
  8a:	77 00       	.word	0x0077	; ????
  8c:	77 00       	.word	0x0077	; ????
  8e:	77 00       	.word	0x0077	; ????
  90:	77 00       	.word	0x0077	; ????
  92:	77 00       	.word	0x0077	; ????
  94:	70 00       	.word	0x0070	; ????
  96:	72 00       	.word	0x0072	; ????
  98:	74 00       	.word	0x0074	; ????
  9a:	76 00       	.word	0x0076	; ????

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf e5       	ldi	r28, 0x5F	; 95
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	10 e0       	ldi	r17, 0x00	; 0
  aa:	a0 e6       	ldi	r26, 0x60	; 96
  ac:	b0 e0       	ldi	r27, 0x00	; 0
  ae:	e6 e7       	ldi	r30, 0x76	; 118
  b0:	f2 e0       	ldi	r31, 0x02	; 2
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x10>
  b4:	05 90       	lpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 37       	cpi	r26, 0x78	; 120
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0xc>
  be:	0e 94 fe 00 	call	0x1fc	; 0x1fc <main>
  c2:	0c 94 39 01 	jmp	0x272	; 0x272 <_exit>

000000c6 <__bad_interrupt>:
  c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <GET_PORT_INDX>:
		*pt_value = *GPIO_DIR[GET_PORT_INDX(port_name)];
		API_Status = NO_ERROR;
	}
	return API_Status ;

}
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	fc 01       	movw	r30, r24
  ce:	e1 54       	subi	r30, 0x41	; 65
  d0:	f1 09       	sbc	r31, r1
  d2:	e4 32       	cpi	r30, 0x24	; 36
  d4:	f1 05       	cpc	r31, r1
  d6:	58 f4       	brcc	.+22     	; 0xee <GET_PORT_INDX+0x24>
  d8:	e6 5d       	subi	r30, 0xD6	; 214
  da:	ff 4f       	sbci	r31, 0xFF	; 255
  dc:	0c 94 33 01 	jmp	0x266	; 0x266 <__tablejump2__>
  e0:	20 e0       	ldi	r18, 0x00	; 0
  e2:	05 c0       	rjmp	.+10     	; 0xee <GET_PORT_INDX+0x24>
  e4:	21 e0       	ldi	r18, 0x01	; 1
  e6:	03 c0       	rjmp	.+6      	; 0xee <GET_PORT_INDX+0x24>
  e8:	22 e0       	ldi	r18, 0x02	; 2
  ea:	01 c0       	rjmp	.+2      	; 0xee <GET_PORT_INDX+0x24>
  ec:	23 e0       	ldi	r18, 0x03	; 3
  ee:	82 2f       	mov	r24, r18
  f0:	08 95       	ret

000000f2 <GPIO_U8_PIN_WRITE>:
  f2:	cf 93       	push	r28
  f4:	68 30       	cpi	r22, 0x08	; 8
  f6:	a0 f5       	brcc	.+104    	; 0x160 <GPIO_U8_PIN_WRITE+0x6e>
  f8:	c6 2f       	mov	r28, r22
  fa:	44 23       	and	r20, r20
  fc:	c9 f0       	breq	.+50     	; 0x130 <GPIO_U8_PIN_WRITE+0x3e>
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	89 f5       	brne	.+98     	; 0x164 <GPIO_U8_PIN_WRITE+0x72>
 102:	0e 94 65 00 	call	0xca	; 0xca <GET_PORT_INDX>
 106:	e8 2f       	mov	r30, r24
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	ee 0f       	add	r30, r30
 10c:	ff 1f       	adc	r31, r31
 10e:	e0 59       	subi	r30, 0x90	; 144
 110:	ff 4f       	sbci	r31, 0xFF	; 255
 112:	01 90       	ld	r0, Z+
 114:	f0 81       	ld	r31, Z
 116:	e0 2d       	mov	r30, r0
 118:	20 81       	ld	r18, Z
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <GPIO_U8_PIN_WRITE+0x32>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	ca 95       	dec	r28
 126:	e2 f7       	brpl	.-8      	; 0x120 <GPIO_U8_PIN_WRITE+0x2e>
 128:	82 2b       	or	r24, r18
 12a:	80 83       	st	Z, r24
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	1b c0       	rjmp	.+54     	; 0x166 <GPIO_U8_PIN_WRITE+0x74>
 130:	0e 94 65 00 	call	0xca	; 0xca <GET_PORT_INDX>
 134:	e8 2f       	mov	r30, r24
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	ee 0f       	add	r30, r30
 13a:	ff 1f       	adc	r31, r31
 13c:	e0 59       	subi	r30, 0x90	; 144
 13e:	ff 4f       	sbci	r31, 0xFF	; 255
 140:	01 90       	ld	r0, Z+
 142:	f0 81       	ld	r31, Z
 144:	e0 2d       	mov	r30, r0
 146:	20 81       	ld	r18, Z
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <GPIO_U8_PIN_WRITE+0x60>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	ca 95       	dec	r28
 154:	e2 f7       	brpl	.-8      	; 0x14e <GPIO_U8_PIN_WRITE+0x5c>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	80 83       	st	Z, r24
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	03 c0       	rjmp	.+6      	; 0x166 <GPIO_U8_PIN_WRITE+0x74>
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	01 c0       	rjmp	.+2      	; 0x166 <GPIO_U8_PIN_WRITE+0x74>
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	cf 91       	pop	r28
 168:	08 95       	ret

0000016a <GPIO_U8_PIN_DIR>:
 16a:	cf 93       	push	r28
 16c:	68 30       	cpi	r22, 0x08	; 8
 16e:	a0 f5       	brcc	.+104    	; 0x1d8 <GPIO_U8_PIN_DIR+0x6e>
 170:	c6 2f       	mov	r28, r22
 172:	44 23       	and	r20, r20
 174:	c9 f0       	breq	.+50     	; 0x1a8 <GPIO_U8_PIN_DIR+0x3e>
 176:	41 30       	cpi	r20, 0x01	; 1
 178:	89 f5       	brne	.+98     	; 0x1dc <GPIO_U8_PIN_DIR+0x72>
 17a:	0e 94 65 00 	call	0xca	; 0xca <GET_PORT_INDX>
 17e:	e8 2f       	mov	r30, r24
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	ee 0f       	add	r30, r30
 184:	ff 1f       	adc	r31, r31
 186:	e8 59       	subi	r30, 0x98	; 152
 188:	ff 4f       	sbci	r31, 0xFF	; 255
 18a:	01 90       	ld	r0, Z+
 18c:	f0 81       	ld	r31, Z
 18e:	e0 2d       	mov	r30, r0
 190:	20 81       	ld	r18, Z
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 c0       	rjmp	.+4      	; 0x19c <GPIO_U8_PIN_DIR+0x32>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	ca 95       	dec	r28
 19e:	e2 f7       	brpl	.-8      	; 0x198 <GPIO_U8_PIN_DIR+0x2e>
 1a0:	82 2b       	or	r24, r18
 1a2:	80 83       	st	Z, r24
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	1b c0       	rjmp	.+54     	; 0x1de <GPIO_U8_PIN_DIR+0x74>
 1a8:	0e 94 65 00 	call	0xca	; 0xca <GET_PORT_INDX>
 1ac:	e8 2f       	mov	r30, r24
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	ee 0f       	add	r30, r30
 1b2:	ff 1f       	adc	r31, r31
 1b4:	e8 59       	subi	r30, 0x98	; 152
 1b6:	ff 4f       	sbci	r31, 0xFF	; 255
 1b8:	01 90       	ld	r0, Z+
 1ba:	f0 81       	ld	r31, Z
 1bc:	e0 2d       	mov	r30, r0
 1be:	20 81       	ld	r18, Z
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <GPIO_U8_PIN_DIR+0x60>
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	ca 95       	dec	r28
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <GPIO_U8_PIN_DIR+0x5c>
 1ce:	80 95       	com	r24
 1d0:	82 23       	and	r24, r18
 1d2:	80 83       	st	Z, r24
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	03 c0       	rjmp	.+6      	; 0x1de <GPIO_U8_PIN_DIR+0x74>
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	01 c0       	rjmp	.+2      	; 0x1de <GPIO_U8_PIN_DIR+0x74>
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	cf 91       	pop	r28
 1e0:	08 95       	ret

000001e2 <GPIO_U8_PIN_READ_SIMPLE>:


u8 GPIO_U8_PIN_READ_SIMPLE(u8 port_name,u8 pin_number)
{
	// read the pin state
   return	*GPIO_PIN[GET_PORT_INDX(port_name)] ;  
 1e2:	0e 94 65 00 	call	0xca	; 0xca <GET_PORT_INDX>
 1e6:	e8 2f       	mov	r30, r24
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	ee 0f       	add	r30, r30
 1ec:	ff 1f       	adc	r31, r31
 1ee:	e0 5a       	subi	r30, 0xA0	; 160
 1f0:	ff 4f       	sbci	r31, 0xFF	; 255
 1f2:	01 90       	ld	r0, Z+
 1f4:	f0 81       	ld	r31, Z
 1f6:	e0 2d       	mov	r30, r0
 1f8:	80 81       	ld	r24, Z
	 
	//return the state
}
 1fa:	08 95       	ret

000001fc <main>:
#include "pb.h"

int main(void)
{
  
   PB_Init('a',PIN0);   //(OR)==>  GPIO_U8_PIN_DIR('a',0,pin_dir_input); 
 1fc:	60 e0       	ldi	r22, 0x00	; 0
 1fe:	81 e6       	ldi	r24, 0x61	; 97
 200:	0e 94 2f 01 	call	0x25e	; 0x25e <PB_Init>
   GPIO_U8_PIN_DIR('a',1,pin_dir_output); 
 204:	41 e0       	ldi	r20, 0x01	; 1
 206:	61 e0       	ldi	r22, 0x01	; 1
 208:	81 e6       	ldi	r24, 0x61	; 97
 20a:	0e 94 b5 00 	call	0x16a	; 0x16a <GPIO_U8_PIN_DIR>
   GPIO_U8_PIN_WRITE('a',1,0); 
 20e:	40 e0       	ldi	r20, 0x00	; 0
 210:	61 e0       	ldi	r22, 0x01	; 1
 212:	81 e6       	ldi	r24, 0x61	; 97
 214:	0e 94 79 00 	call	0xf2	; 0xf2 <GPIO_U8_PIN_WRITE>
	
	while (1) 
    {
		
		if (   ! GPIO_U8_PIN_READ_SIMPLE('a',0)     /*! PB_IsPressed('a',0)*/)
 218:	60 e0       	ldi	r22, 0x00	; 0
 21a:	81 e6       	ldi	r24, 0x61	; 97
 21c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_U8_PIN_READ_SIMPLE>
 220:	81 11       	cpse	r24, r1
 222:	fa cf       	rjmp	.-12     	; 0x218 <main+0x1c>
		  {
			  GPIO_U8_PIN_WRITE('a',1,1); 
 224:	41 e0       	ldi	r20, 0x01	; 1
 226:	61 e0       	ldi	r22, 0x01	; 1
 228:	81 e6       	ldi	r24, 0x61	; 97
 22a:	0e 94 79 00 	call	0xf2	; 0xf2 <GPIO_U8_PIN_WRITE>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 22e:	2f ef       	ldi	r18, 0xFF	; 255
 230:	82 e5       	ldi	r24, 0x52	; 82
 232:	97 e0       	ldi	r25, 0x07	; 7
 234:	21 50       	subi	r18, 0x01	; 1
 236:	80 40       	sbci	r24, 0x00	; 0
 238:	90 40       	sbci	r25, 0x00	; 0
 23a:	e1 f7       	brne	.-8      	; 0x234 <main+0x38>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <main+0x42>
 23e:	00 00       	nop
			  _delay_ms(300); 
			  GPIO_U8_PIN_WRITE('a',1,0);
 240:	40 e0       	ldi	r20, 0x00	; 0
 242:	61 e0       	ldi	r22, 0x01	; 1
 244:	81 e6       	ldi	r24, 0x61	; 97
 246:	0e 94 79 00 	call	0xf2	; 0xf2 <GPIO_U8_PIN_WRITE>
 24a:	2f ef       	ldi	r18, 0xFF	; 255
 24c:	82 e5       	ldi	r24, 0x52	; 82
 24e:	97 e0       	ldi	r25, 0x07	; 7
 250:	21 50       	subi	r18, 0x01	; 1
 252:	80 40       	sbci	r24, 0x00	; 0
 254:	90 40       	sbci	r25, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <main+0x54>
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0x5e>
 25a:	00 00       	nop
 25c:	dd cf       	rjmp	.-70     	; 0x218 <main+0x1c>

0000025e <PB_Init>:
#include "GPIO.h"

void PB_Init(u8 port_name, u8 pin_number)
{
	// set the corresponding pin as an input
	GPIO_U8_PIN_DIR(port_name , pin_number , pin_dir_input);
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	0e 94 b5 00 	call	0x16a	; 0x16a <GPIO_U8_PIN_DIR>
 264:	08 95       	ret

00000266 <__tablejump2__>:
 266:	ee 0f       	add	r30, r30
 268:	ff 1f       	adc	r31, r31
 26a:	05 90       	lpm	r0, Z+
 26c:	f4 91       	lpm	r31, Z
 26e:	e0 2d       	mov	r30, r0
 270:	09 94       	ijmp

00000272 <_exit>:
 272:	f8 94       	cli

00000274 <__stop_program>:
 274:	ff cf       	rjmp	.-2      	; 0x274 <__stop_program>
